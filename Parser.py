import vk
from Settings import *

# –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
class Users:
    def __init__(self, event):
        self.event = event

    # –ü–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ API
    def User_Name(event):
        for i in range(len(Users.Profiles(event))):
            if Users.Profiles(event)[i]["id"] == event.obj.message['from_id']:
                first_name = Users.Profiles(event)[i]["first_name"]
                last_name = Users.Profiles(event)[i]["last_name"]
                full_name = first_name + " " + last_name
                return full_name

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ –∞–π–¥–∏.
    def User_Name_Id(event, id):
        for i in range(len(Users.Profiles(event))):
            if Users.Profiles(event)[i]["id"] == id:
                first_name = Users.Profiles(event)[i]["first_name"]
                last_name = Users.Profiles(event)[i]["last_name"]
                full_name = first_name + " " + last_name
                return full_name

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ—Å–µ–¥ –≤ json —Ñ–æ—Ä–º–∞—Ç–µ.
    def Profiles(event):
        Conversation = vk_session.method("messages.getConversationMembers",
                                         {"peer_id": event.chat_id + 2000000000, "fields": 'online'})
        return Conversation['profiles']

    # –ú–∞—Å—Å–∏–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω|–æ—Ñ—Ñ–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    def online_msg(event):
        ids = []
        for i in Users.Profiles(event):
            if i['online'] == 1:
                ids += [f'[‚ùå] | *id{str(i["id"])}({Users.User_Name_Id(event, i["id"])})']
                text = '\n'.join(map(str, ids))
        return f"""
‚öô –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–Ω–ª–∞–π–Ω –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: {len(ids)}

üìé –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω:

{text}
                 """

    def offline_msg(event):
        ids = []
        for i in Users.Profiles(event):
            if i['online'] == 0:
                ids += [f'[‚ùå] | *id{str(i["id"])}({Users.User_Name_Id(event, i["id"])})']
                text = '\n'.join(map(str, ids))
        return f"""
‚öô –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ñ—Ñ–ª–∞–π–Ω –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: {len(ids)}

üìé –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω:

{text}
                         """

    # –ü–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–µ—Å–µ–¥—ã
    def is_owner(event):
        Converasion = vk_session.method("messages.getConversationMembers",
                                        {"peer_id": event.chat_id + 2000000000, "fields": 'online'})
        members = Converasion['items']
        for i in range(len(members)):
            if members[i]["is_owner"] == True:
                try:
                    own_id = members[i]["member_id"]
                    return own_id
                except:
                    continue

# –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–µ—Å–µ–¥–∞–º–∏
class Chats:
    def __init__(self, event):
        self.event = event

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –±–µ—Å–µ–¥—ã
    def Title(event):
        Converasion = vk_session.method("messages.getConversationsById",
                                        {"peer_ids": event.chat_id + 2000000000})
        info = Converasion['items'][0]['chat_settings']['title']

        return info

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Å—Å—ã–ª–∫–∏
    def Link(self):
        link = vk.messages.getInviteLink(
            peer_id=self.event.chat_id + 2000000000,
            reset=0,
        )
        return link

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–∏–ª–∏ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∂–µ –æ–Ω –ø–æ–ø–∞–ª –≤ —á–∞—Ç –ø–æ —Å—Å—ã–ª–∫–µ.
    def action(event):
        try:
            chat_invite = event.object.message['action']
            if chat_invite['type'] == 'chat_invite_user':
                return True
            else:
                return False
        except:
            pass

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–π–¥–∏ –∑–∞–±–∞–Ω–Ω–µ–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–∞, –º–æ–∂–Ω–æ –±—ã–ª–æ —ç—Ç–∏ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ –æ–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é, –Ω–æ –ª–µ–Ω—å.
    def action_id(event):
        try:
            chat_invite = event.object.message['action']
            return chat_invite['member_id']
        except:
            pass
